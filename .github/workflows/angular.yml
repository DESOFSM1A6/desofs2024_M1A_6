name: Angular CI

env:
  DOCKERFILE_PATH: ./Code/FE/Dockerfile
  DOCKER_IMAGE_NAME: frontend-image

on:
  push:
    branches:
    - main
    - feature/*
    paths: 
    - ./Code/FE/*
  pull_request:
    branches: [ "main" ]

# Fix
jobs:
  #before all jobs change the working directory to the FE folder
  

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Dependencies
      working-directory: ./Code/FE/login_Auth0/login
      run: npm install

    - name: Build
      working-directory: ./Code/FE/login_Auth0/login
      run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Dependencies
      working-directory: ./Code/FE/login_Auth0/login
      run: npm install

    - name: Test
      run: npm run test

  sonar:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install Dependencies
      working-directory: ./Code/FE/login_Auth0/login
      run: ng build 

    - name: SonarQube Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  image_scan:
    name: Build and Run Image Scan
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Docker
      uses: docker-practice/actions-setup-docker@v1
      with:
        docker_version: '26.1.3'

    - name: Build Docker Image
      run: docker build -f ${{ env.DOCKERFILE_PATH }} -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

    - name: Docker Scout Scan
      uses: docker/scout-action@v1.8.0
      with:
        dockerhub-user: ${{ secrets.DOCKER_USER }}
        dockerhub-password: ${{ secrets.DOCKER_PWD }}
        command: quickview,cves
        only-severities: critical,high
        sarif-file: angular-scout-report.sarif

    - name: Upload Artificat
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: docker-scout-findings
        path: angular-scout-report.sarif

    # Publish das docker images

    # deploy (next sprint/pipeline)
    
    # docker compose etc

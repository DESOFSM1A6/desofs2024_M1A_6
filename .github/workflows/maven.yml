name: Java CI with Maven

env:
  DOCKERFILE_PATH: ./Code/BE/Dockerfile
  DOCKER_IMAGE_NAME: backend-image

on:
  push:
    branches:
      - main
      - 'feature/**'
    paths:
      - 'Code/BE/**'
  pull_request:
    branches: ["main"]

jobs:
  build-and-test:
    name: Build and Test Application
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # - name: Cache Maven packages
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.m2
    #     key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #     restore-keys: |
    #       ${{ runner.os }}-m2-

    - name: Build with Maven
      run: mvn -B -U clean install --file Code/BE/pom.xml

    - name: Upload SBOM to artifact
      uses: actions/upload-artifact@v3
      with:
        name: sbom
        path: Code/BE/target/bom.xml

    - name: Test with Maven
      run: mvn -B -U test --file Code/BE/pom.xml

  sonar:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_BE }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=desofsm1a6_desofs2024_M1A_6_BE -f Code/BE/pom.xml
  
  image_scan:
    name: Build and Run Image Scan
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Docker
      uses: docker-practice/actions-setup-docker@v1
      with:
        docker_version: '26.1.3'

    - name: Build Docker Image
      run: docker build -f ${{ env.DOCKERFILE_PATH }} --build-arg PROJECT_PATH=/Code/BE -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

    - name: Docker Scout Scan
      uses: docker/scout-action@v1.8.0
      with:
        dockerhub-user: ${{ secrets.DOCKER_USER }}
        dockerhub-password: ${{ secrets.DOCKER_PWD }}
        command: quickview,cves
        only-severities: critical,high
        sarif-file: java-scout-report.sarif

    - name: Upload Artificat
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: docker-scout-findings
        path: java-scout-report.sarif

    # Publish das docker images

    # deploy (next sprint/pipeline)
    
    # docker compose etc

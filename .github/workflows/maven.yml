# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

env:
  IMAGE_FULL_PATH: .
  DOCKER_IMAGE_NAME: my-image-name
  RELEASE_VERSION: 1.0.0
  REGISTRY: docker.io
  DOCKER_USERNAME: 1190974
  DOCKER_REPO: desofs-m1a6
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}

on:
  push:
    branches:
    - main
    - feature/*
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ env.SHA }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B clean install --file Code/BE/pom.xml

    - name: Test with Maven
      run: mvn test --file Code/BE/pom.xml

    # Sonar (ver)

    # Docker Scout
    - name: Log in to Docker Hub
      run: docker login --username ${{ env.DOCKER_USERNAME }}

    - name: Build Docker image
      run: docker build -t ${{ env.DOCKER_IMAGE_NAME }}) {{ env.IMAGE_FULL_PATH }}

    - name: Get image ID
      id: get_image_id
      run: echo "::set-output name=image_id::$(docker images -q ${{ env.DOCKER_IMAGE_NAME }})"
      
    - name: Tag Docker image
      run: docker tag ${{ steps.get_image_id.outputs.image_id }} ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}
      
    - name: Push Docker image
      run: docker push ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}

    - name: Docker Scout
      id: docker-scout
      if: ${{ github.event_name == 'pull_request' }}
      uses: docker/scout-action@v1
      with:
        command: cves
        image: ${{ steps.meta.outputs.tags }}
        only-severities: critical,high
        exit-code: true

    # Push docker image to local store

    # Proxima pipeline

    # Get image from local store

    # Docker scout

    # Publish das docker images

    # deploy (next sprint/pipeline)
    
    # docker compose etc

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
   # - name: Update dependency graph
   #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

env:
  DOCKERFILE_PATH: .\Code\BE\
  DOCKER_IMAGE_NAME: backend-image

on:
  push:
    branches:
    - main
    - feature/*
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B clean install --file Code/BE/pom.xml

    - name: Test with Maven
      run: mvn test --file Code/BE/pom.xml

  image_scan:
    name: Build Image and Run Image Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Docker
      uses: docker-practice/actions-setup-docker@v1

    - name: Build Docker Image
      run: docker build -f Dockerfile -t ${{ env.DOCKER_IMAGE_NAME }}:latest ${{env.DOCKERFILE_PATH}}

    - name: Docker Scout Scan
      uses: docker/scout-action@v1.8.0
      with:
        dockerhub-user: ${{ secrets.DOCKER_USER }}
        dockerhub-password: ${{ secrets.DOCKER_PWD }}
        command: quickview,cves
        only-severities: critical,high
        sarif-file: scout-report.sarif

    - name: Upload Artificat
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: docker-scout-findings
        path: scout-report.sarif

    # - name: Docker Scout Scan
    #   run: | 
    #     curl -fsSl https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
    #     sh install-scout.sh

    #     echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

    #     docker scout quickview
    #     docker scout cves

    # Publish das docker images

    # deploy (next sprint/pipeline)
    
    # docker compose etc

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
   # - name: Update dependency graph
   #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

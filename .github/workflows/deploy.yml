name: deploy

on:
  - workflow_call

jobs:
  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run a multi-line script
        run: |
          mkdir ../buildbe
          cp -TR ./Code/BE/ ../buildbe
          tar -cvf deploy-be.tar ../buildbe/
          
          mkdir ../buildfe
          cp -TR ./Code/FE/ ../buildfe
          tar -cvf deploy-fe.tar ../buildfe/

      - name: Copy latest BE code to VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 206.189.24.67
          username: root
          port: 22
          password: root
          key: ${{ secrets.SSH_KEY }}
          overwrite: true
          source: 'deploy-be'
          target: '/usr/src/Code/BE'

      - name: Copy latest FE code to VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 206.189.24.67
          username: root
          port: 22
          password: root
          key: ${{ secrets.SSH_KEY }}
          overwrite: true
          source: 'deploy-fe'
          target: '/usr/src/Code/FE'

      # - name: Copy latest docker-compose code to VM
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: 206.189.24.67
      #     username: root
      #     port: 22
      #     key: ${{ secrets.SSH_KEY }}
      #     source: '/Code/Infrastructure/docker/docker-compose.yml'
      #     target: '/usr/src/Code/Infrastructure/docker'

      - name: SSH into VM and rebuild docker images
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: 206.189.24.67
          username: root
          port: 22
          password: root
          key: ${{ secrets.SSH_KEY }}
          # Only re-build fe, be
          script: |
            cd /usr/src/Code/Infrastructure/docker
            docker-compose up -d --build fe be
            docker exec -it docker_keycloak_1 sh -c 'sleep 240 && cd /opt/keycloak/bin/ && ./kcadm.sh config credentials --server http://localhost:8080 --realm master --user admin --password admin && ./kcadm.sh update realms/master -s sslRequired=NONE'

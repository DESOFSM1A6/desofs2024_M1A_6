{"ast":null,"code":"import * as THREE from 'three';\nimport { skyboxData } from '../default_data';\nexport class Skybox {\n  constructor() {\n    this.loaded = false;\n    this.object = new THREE.Group();\n    let matArray = [];\n    const front = new THREE.TextureLoader().load(skyboxData.frontURL);\n    const back = new THREE.TextureLoader().load(skyboxData.backURL);\n    const up = new THREE.TextureLoader().load(skyboxData.upURL);\n    const down = new THREE.TextureLoader().load(skyboxData.downURL);\n    const right = new THREE.TextureLoader().load(skyboxData.rightURL);\n    const left = new THREE.TextureLoader().load(skyboxData.leftURL);\n    matArray.push(new THREE.MeshBasicMaterial({\n      side: THREE.BackSide,\n      map: front\n    }));\n    matArray.push(new THREE.MeshBasicMaterial({\n      side: THREE.BackSide,\n      map: back\n    }));\n    matArray.push(new THREE.MeshBasicMaterial({\n      side: THREE.BackSide,\n      map: up\n    }));\n    matArray.push(new THREE.MeshBasicMaterial({\n      side: THREE.BackSide,\n      map: down\n    }));\n    matArray.push(new THREE.MeshBasicMaterial({\n      side: THREE.BackSide,\n      map: right\n    }));\n    matArray.push(new THREE.MeshBasicMaterial({\n      side: THREE.BackSide,\n      map: left\n    }));\n    const geometry = new THREE.BoxGeometry(skyboxData.height, skyboxData.width, skyboxData.depth);\n    const skybox = new THREE.Mesh(geometry, matArray);\n    skybox.rotateX(Math.PI / 2);\n    this.object.add(skybox);\n    this.loaded = true;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
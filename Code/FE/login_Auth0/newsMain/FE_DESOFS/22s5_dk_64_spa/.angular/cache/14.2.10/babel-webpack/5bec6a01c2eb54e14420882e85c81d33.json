{"ast":null,"code":"import * as THREE from 'three';\nimport { roundaboutData, connectionData } from '../default_data';\nexport class Roundabouts {\n  constructor(nodes) {\n    this.loaded = false;\n    this.object = new THREE.Group();\n    const texture = new THREE.TextureLoader().load(roundaboutData.roundaboutURL);\n    texture.magFilter = THREE.LinearFilter;\n    texture.minFilter = THREE.LinearMipmapLinearFilter;\n    const material = new THREE.MeshBasicMaterial({\n      color: roundaboutData.color,\n      side: THREE.DoubleSide,\n      map: texture\n    });\n\n    for (let node of nodes) {\n      let geometry = new THREE.CircleGeometry(connectionData.width * roundaboutData.k / 2, roundaboutData.segments); // Remove potential duplicates.\n\n      if (this.object.children.filter(round => round.position === new THREE.Vector3(node.x, node.y, node.z + roundaboutData.infinitesimal)).length > 0) {\n        continue;\n      }\n\n      let roundabout = new THREE.Mesh(geometry, material);\n      roundabout.position.set(node.x, node.y, node.z + roundaboutData.infinitesimal);\n      roundabout.castShadow = true;\n      roundabout.receiveShadow = true;\n      this.object.add(roundabout);\n    }\n\n    this.loaded = true;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}